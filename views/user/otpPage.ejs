<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>OTP Verification</title>
    <link rel="stylesheet" href="css/otp.css" />
    <link
      data-minify="1"
      href="https://www.bacancytechnology.com/blog/wp-content/cache/min/1/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css?ver=1727441421"
      rel="stylesheet"
      type="text/css"
    />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  </head>
  <body>
    <h2 style="text-align: center; margin-top: 100px">PICK UR PCEE</h2>

    <div class="login-container">
      <div class="login-form">
        <h2>OTP Verification</h2>
        <% if (success_message.length > 0) { %>
        <div id="flash-success" class="text-success text-center">
          <%= success_message %>
        </div>
        <% } else if (error_message.length > 0) { %>
        <div id="flash-error" class="text-danger text-center">
          <%= error_message %>
        </div>
        <% } %>

        <form id="form" method="post" action="/otp">
          <div class="input-group">
            <label for="otp">Enter OTP</label>
            <div class="otp-inputs" id="otp-inputs">
              <input type="text" id="otp-1" maxlength="1" name="otp1" />
              <input type="text" id="otp-2" maxlength="1" name="otp2" />
              <input type="text" id="otp-3" maxlength="1" name="otp3" />
              <input type="text" id="otp-4" maxlength="1" name="otp4" />
              <input type="text" id="otp-5" maxlength="1" name="otp5" />
              <input type="text" id="otp-6" maxlength="1" name="otp6" />
            </div>
            <div class="error" style="text-align: center"></div>
          </div>
          <button id="submit" type="submit" class="primary-btn">Verify</button>
          <h6 id="timer" style="text-align: center;"></h6>
          <button style="display: none;" type="button" id="resend-otp" class="primary-btn">Resend OTP</button>
        </form>
      </div>
    </div>

    <script>
      const inputs = document.querySelectorAll("#otp-inputs input");

      // Handle input focus and paste for OTP input fields
      inputs.forEach((input, index) => {
        input.addEventListener("input", (event) => {
          if (event.target.value.length === 1 && index < inputs.length - 1) {
            inputs[index + 1].focus();
          }
        });

        input.addEventListener("keydown", (event) => {
          if (event.key === "Backspace" && event.target.value === "" && index > 0) {
            inputs[index - 1].focus();
          }
        });

        input.addEventListener("paste", (event1) => {
          const pastedData = event1.clipboardData.getData("text");
          if (pastedData.length === inputs.length) {
            inputs.forEach((input, i) => {
              input.value = pastedData[i] || "";
            });
            event1.preventDefault();
          }
        });
      });

      const form = document.getElementById("form");

      let x = true;

      const setError = (input, message) => {
        input.innerText = message;
        input.classList.add("error");
        x = false;
      };

      const clearError = (input) => {
        input.classList.remove("error");
      };

      const validateInputs = () => {
        x = true;

        const input1Value = document.getElementById("otp-1").value.trim();
        const input2Value = document.getElementById("otp-2").value.trim();
        const input3Value = document.getElementById("otp-3").value.trim();
        const input4Value = document.getElementById("otp-4").value.trim();
        const input5Value = document.getElementById("otp-5").value.trim();
        const input6Value = document.getElementById("otp-6").value.trim();

        if (input1Value === "") setError(input1, "enter the otp");
        if (input2Value === "") setError(input2, "enter the otp");
        if (input3Value === "") setError(input3, "enter the otp");
        if (input4Value === "") setError(input4, "enter the otp");
        if (input5Value === "") setError(input5, "enter the otp");
        if (input6Value === "") setError(input6, "enter the otp");

        return x;
      };

      form.addEventListener("submit", (event) => {
        const isValid = validateInputs();
        if (!isValid) {
          event.preventDefault();
        }
      });

     document.addEventListener("DOMContentLoaded", function () {
  const form = document.getElementById("form");
  const resendBtn = document.getElementById("resend-otp");
  const timerDisplay = document.getElementById("timer");

  // Initially hide the resend button
  resendBtn.style.display = "none";

  let timeLimit = 2 * 60 * 1000; // 2 minutes in milliseconds
  let interval;

  // Timer logic
  const startTimer = () => {
    const endTime = Date.now() + timeLimit;

    const updateTimer = () => {
      const now = Date.now();
      const timeLeft = endTime - now;

      if (timeLeft > 0) {
        const minutes = Math.floor(timeLeft / 60000);
        const seconds = Math.floor((timeLeft % 60000) / 1000);
        timerDisplay.innerHTML = `OTP expires in ${minutes}m ${seconds}s`;
      } else {
        clearInterval(interval);
        timerDisplay.innerHTML = "OTP has expired!";
        // Show the resend button when the timer expires
        resendBtn.style.display = "block";
      }
    };

    // Update the timer every second
    interval = setInterval(updateTimer, 1000);
  };

  startTimer(); // Start the timer initially

  resendBtn.addEventListener("click", async function () {
    try {
      const response = await fetch("/resendOtp", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
      });

      const result = await response.json();
      if (result.success) {
        showToast("OTP Resent Successfully!", "success");
        timeLimit = 2 * 60 * 1000; // New 2 minutes
        resendBtn.style.display = "none"; // Hide the resend button again
        startTimer(); // Restart the timer
      } else {
        showToast(result.message, "error");
      }
    } catch (error) {
      showToast("An error occurred while resending OTP", "error");
    }
  });

  // Intercept the form submit to send OTP via AJAX
  form.addEventListener("submit", async function (event) {
    event.preventDefault(); // Prevent the form from submitting normally

    const otp1 = document.getElementById("otp-1").value;
    const otp2 = document.getElementById("otp-2").value;
    const otp3 = document.getElementById("otp-3").value;
    const otp4 = document.getElementById("otp-4").value;
    const otp5 = document.getElementById("otp-5").value;
    const otp6 = document.getElementById("otp-6").value;

    const otpInput = `${otp1}${otp2}${otp3}${otp4}${otp5}${otp6}`;

    try {
      const response = await fetch("/otp", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ otp1, otp2, otp3, otp4, otp5, otp6 }),
      });

      const result = await response.json();

      if (result.success) {
        showToast("OTP verified successfully!", "success");
        // Redirect user to another page (e.g., login) after successful OTP verification
        window.location.href = "/login";
      } else {
        showToast(result.message, "error");
      }
    } catch (error) {
      showToast("An error occurred during OTP verification", "error");
    }
  });

  // Toast notification function
  function showToast(message, type) {
    let backgroundColor;

    // Set the background color based on the type of message
    if (type === "success") {
      backgroundColor = "green";
    } else if (type === "error") {
      backgroundColor = "red";
    } else {
      backgroundColor = "gray"; // Default color for other messages
    }

    // Initialize Toastify with the appropriate message and style
    Toastify({
      text: message,
      duration: 3000, // Show for 3 seconds
      close: true,
      gravity: "top", // Show at the top of the screen
      position: "right", // Align toast to the right
      backgroundColor: backgroundColor,
    }).showToast();
  }
});
</script>
  </body>
</html>
